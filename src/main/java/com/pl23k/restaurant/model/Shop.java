package com.pl23k.restaurant.model;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.jfinal.plugin.activerecord.TableMapping;
import com.pl23k.restaurant.model.base.BaseShop;

import java.math.BigDecimal;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Shop extends BaseShop<Shop> {
	public static final Shop dao = new Shop().dao();
	public static final String tableName = TableMapping.me().getTable(Shop.class).getName();
	public static int mPageSize = 10;

	/**
	 * 通过ID获取店铺
	 * @param id
	 * @return
	 */
	public static Shop getShopById(Integer id) {
		Shop shop = null;
		try {
			shop = dao.findById(id);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return shop;
	}

	/**
	 * 通过ID获取店铺名称
	 * @param id
	 * @return
	 */
	public static String getShopNameById(Integer id){
		String name = null;
		try{
			Shop shop = Shop.getShopById(id);
			if(shop!=null){
				name = shop.getName();
			}
		}catch (Exception e){
			e.printStackTrace();
		}
		return name;
	}

	/**
	 * 获取所有店铺
	 * @param isActive 是否启用
	 * @return
	 */
	public static List<Shop> getAllShop(Boolean isActive){
		List<Shop> shops = null;
		try{
			shops = dao.find(String.format("select * from %s where isActive=?",tableName),isActive);
		}catch (Exception e){
			e.printStackTrace();
		}
		return shops;
	}

	/**
	 * 分页取出记录
	 * @param pageNumber
	 * @return
	 */
	public static Page<Shop> getRecordByPage(int pageNumber){
		Page<Shop> page = null;
		try {
			page = dao.paginate(pageNumber, mPageSize, "select * ", String.format("from %s order by id desc", tableName));
		}catch (Exception e){
			e.printStackTrace();
		}
		return page;
	}

	/**
	 * 分页查询记录列表
	 *
	 * @param pageNumber
	 * @param searchType 1、按店铺名称搜索
	 * @param searchKey
	 * @param startTime
	 * @param endTime
	 * @return
	 */
	public static Page<Shop> searchRecordByPage(Integer pageNumber,Integer searchType, String searchKey, String startTime, String endTime) {
		Page<Shop> page = null;
		try {
			if(pageNumber==null || pageNumber<1) pageNumber=1;
			String where;
			if(searchType == null) searchType = 1;
			if(searchKey == null){
				where = String.format("from %s where id > 0 ", tableName);
			}else{
				if(searchType == 1){
					where = String.format("from %s where name like '%%%s%%' ", tableName, searchKey);
				}else{
					where = String.format("from %s where  id>0 ", tableName);
				}
			}

			if (startTime != null && !startTime.equals("") && endTime != null && !endTime.equals("")) {
				where = String.format("%s and (addTime between '%s' and '%s')", where, startTime.replace('_', '-'), endTime.replace('_', '-'));
			}

			where = String.format("%s order by id desc", where);
			page = dao.paginate(pageNumber, mPageSize, "select * ", where);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return page;
	}

	/**
	 * 获取今日业绩
	 * @return
	 */
	public BigDecimal getTodayAchievement(){
		BigDecimal decimal = BigDecimal.ZERO;
		try{
			Record record = Db.findFirst(String.format("select sum(money) as total from %s where status>1 and  shopId=? and to_days(now())=to_days(addTime)",RechargeOrder.tableName),getId());
			if(record!=null && record.get("total")!=null){
				decimal = record.getBigDecimal("total");
			}
		}catch (Exception e){
			e.printStackTrace();
		}
		return decimal;
	}
	/**
	 * 获取今日实到业绩
	 * @return
	 */
	public BigDecimal getTodayAchievementReal(){
		BigDecimal decimal = BigDecimal.ZERO;
		try{
			Record record = Db.findFirst(String.format("select sum(payMoney) as total from %s where  status>1 and  shopId=? and to_days(now())=to_days(addTime)",RechargeOrder.tableName),getId());
			if(record!=null && record.get("total")!=null){
				decimal = record.getBigDecimal("total");
			}
		}catch (Exception e){
			e.printStackTrace();
		}
		return decimal;
	}


	/**
	 * 获取总业绩
	 * @return
	 */
	public BigDecimal getTotalAchievement(){
		BigDecimal decimal = BigDecimal.ZERO;
		try{
			Record record = Db.findFirst(String.format("select sum(money) as total from %s where status>1 and shopId=?",
					RechargeOrder.tableName),getId());
			if(record!=null && record.get("total")!=null){
				decimal = record.getBigDecimal("total");
			}
		}catch (Exception e){
			e.printStackTrace();
		}
		return decimal;
	}
	/**
	 * 获取总实到业绩
	 * @return
	 */
	public BigDecimal getTotalAchievementReal(){
		BigDecimal decimal = BigDecimal.ZERO;
		try{
			Record record = Db.findFirst(String.format("select sum(payMoney) as total from %s where status>1 and shopId=?",RechargeOrder.tableName),getId());
			if(record!=null && record.get("total")!=null){
				decimal = record.getBigDecimal("total");
			}
		}catch (Exception e){
			e.printStackTrace();
		}
		return decimal;
	}

	/**
	 * 获取员工数量
	 * @return
	 */
	public Integer getWorkerCount(){
		return Worker.getWorkerCountByShopId(getId());
	}
}
